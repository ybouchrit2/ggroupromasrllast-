{"version":3,"file":"static/js/989.ab2d675e.chunk.js","mappings":"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","sources":["components/admin/CreateBlog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\"; // استيراد styled-components\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // استيراد FontAwesomeIcon\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\"; // استيراد الأيقونة\r\nimport \"./admin.css\"; // استيراد ملف التنسيق\r\n\r\nconst NavigateButton = styled.button`\r\n  background-color: rgb(112, 43, 172);\r\n  color: #fff;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 12px 30px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst CreateBlog = () => {\r\n  const { id } = useParams();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [language, setLanguage] = useState(\"it\");\r\n  const [type, setType] = useState(\"blog\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [createdAt] = useState(new Date().toISOString());\r\n\r\n  const languages = [\r\n    { code: \"us\", name: \"Inglese\" },\r\n    { code: \"ar\", name: \"Arabo\" },\r\n    { code: \"fr\", name: \"Francese\" },\r\n    { code: \"es\", name: \"Spagnolo\" },\r\n    { code: \"de\", name: \"Tedesco\" },\r\n  ];\r\n\r\n  const types = [\r\n    { code: \"blog\", name: \"Blog\" },\r\n    { code: \"project\", name: \"Progetto\" },\r\n    { code: \"news\", name: \"Notizia\" },\r\n  ];\r\n\r\n  const handleTitleChange = (event) => setTitle(event.target.value);\r\n  const handleContentChange = (event) => setContent(event.target.value);\r\n  const handleDescriptionChange = (event) => setDescription(event.target.value);\r\n  const handleAuthorChange = (event) => setAuthor(event.target.value);\r\n  const handleImageChange = (event) => setImage(event.target.files[0]);\r\n  const handleLanguageChange = (event) => setLanguage(event.target.value);\r\n  const handleTypeChange = (event) => setType(event.target.value);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios\r\n        .get(`http://localhost:8080/api/blogs/${id}`)\r\n        .then((response) => {\r\n          const blogData = response.data;\r\n          setTitle(blogData.title);\r\n          setContent(blogData.content);\r\n          setDescription(blogData.description);\r\n          setAuthor(blogData.author);\r\n          setLanguage(blogData.language);\r\n          setType(blogData.type);\r\n          setImage(blogData.image_path);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching blog data\", error);\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"author\", author);\r\n    formData.append(\"language\", language === \"en\" ? \"us\" : language);\r\n    formData.append(\"created_at\", createdAt);\r\n    formData.append(\"type\", type);\r\n    if (image) formData.append(\"image\", image);\r\n\r\n    try {\r\n      const response = id\r\n        ? await axios.put(`http://localhost:8080/api/blogs/${id}`, formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          })\r\n        : await axios.post(\"http://localhost:8080/api/blogs\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        setMessage(\"Blog salvato con successo!\");\r\n        setTitle(\"\");\r\n        setContent(\"\");\r\n        setDescription(\"\");\r\n        setAuthor(\"\");\r\n        setImage(null);\r\n        setType(\"blog\");\r\n      }\r\n    } catch (error) {\r\n      let errorMessage = \"Errore durante il salvataggio. Riprova.\";\r\n      setMessage(errorMessage);\r\n      console.error(\"Error saving blog:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-blog\">\r\n      <h1>{id ? \"Modifica Blog\" : \"Crea un Nuovo Blog\"}</h1>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Titolo:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Descrizione:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Autore:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={author}\r\n            onChange={handleAuthorChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Contenuto:</label>\r\n          <textarea value={content} onChange={handleContentChange} required />\r\n        </div>\r\n        <div>\r\n          <label>Immagine:</label>\r\n          <input type=\"file\" onChange={handleImageChange} />\r\n          {image && (\r\n            <div>\r\n              <p>Immagine attuale:</p>\r\n              <img\r\n                src={URL.createObjectURL(image)}\r\n                alt=\"Current\"\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Lingua:</label>\r\n          <select value={language} onChange={handleLanguageChange}>\r\n            {languages.map((lang) => (\r\n              <option key={lang.code} value={lang.code}>\r\n                {lang.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Tipo:</label>\r\n          <select value={type} onChange={handleTypeChange}>\r\n            {types.map((type) => (\r\n              <option key={type.code} value={type.code}>\r\n                {type.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Invio...\" : id ? \"Aggiorna Blog\" : \"Invia Blog\"}\r\n        </button>\r\n      </form>\r\n      <ButtonContainer>\r\n        <Link to=\"/ManageBlogs\">\r\n          <NavigateButton>\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n            Vai a Gestisci Blog\r\n          </NavigateButton>\r\n        </Link>\r\n      </ButtonContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateBlog;\r\n"],"names":["NavigateButton","styled","button","_templateObject","_taggedTemplateLiteral","ButtonContainer","div","_templateObject2","CreateBlog","id","useParams","title","setTitle","useState","content","setContent","description","setDescription","author","setAuthor","image","setImage","language","setLanguage","type","setType","loading","setLoading","message","setMessage","createdAt","Date","toISOString","useEffect","axios","get","concat","then","response","blogData","data","image_path","catch","error","console","_jsxs","className","children","_jsx","onSubmit","async","event","preventDefault","formData","FormData","append","put","headers","post","status","value","onChange","target","required","files","src","URL","createObjectURL","alt","style","width","height","code","name","map","lang","disabled","Link","to","FontAwesomeIcon","icon","faArrowLeft"],"sourceRoot":""}