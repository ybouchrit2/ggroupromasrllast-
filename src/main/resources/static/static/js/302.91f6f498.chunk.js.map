{"version":3,"file":"static/js/302.91f6f498.chunk.js","mappings":"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","sources":["components/admin/AddEditExperience.js"],"sourcesContent":["// src/components/AddEditExperience.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';  // استخدام useNavigate بدلاً من useHistory\r\n\r\nconst AddEditExperience = () => {\r\n  const { experienceId } = useParams();  // الحصول على id من الرابط إذا كان موجوداً\r\n  const navigate = useNavigate();  // استخدم useNavigate بدلاً من useHistory\r\n\r\n  const [jobTitle, setJobTitle] = useState('');\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [experienceDescription, setExperienceDescription] = useState('');\r\n  const [salary, setSalary] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  // إذا كان هناك experienceId (الـ ID موجود)، نقوم بتحميل البيانات لتعديلها\r\n  useEffect(() => {\r\n    if (experienceId) {\r\n      const fetchExperience = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/api/experiences/${experienceId}`);\r\n          const experience = response.data;\r\n          setJobTitle(experience.jobTitle);\r\n          setCompanyName(experience.companyName);\r\n          setLocation(experience.location);\r\n          setStartDate(experience.startDate);\r\n          setEndDate(experience.endDate);\r\n          setExperienceDescription(experience.experienceDescription);\r\n          setSalary(experience.salary);\r\n        } catch (error) {\r\n          setError('حدث خطأ أثناء تحميل الخبرة.');\r\n          console.error(error);\r\n        }\r\n      };\r\n      fetchExperience();\r\n    }\r\n  }, [experienceId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!jobTitle || !companyName || !location || !startDate || !endDate || !experienceDescription || !salary) {\r\n      setError('يرجى ملء جميع الحقول.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newExperience = {\r\n        jobTitle,\r\n        companyName,\r\n        location,\r\n        startDate,\r\n        endDate,\r\n        experienceDescription,\r\n        salary,\r\n      };\r\n\r\n      if (experienceId) {\r\n        // إذا كان الـ ID موجوداً، نقوم بتعديل البيانات\r\n        await axios.put(`http://localhost:8080/api/experiences/${experienceId}`, newExperience);\r\n        setSuccess(true);\r\n        setError('');\r\n      } else {\r\n        // إذا لم يكن الـ ID موجوداً، نقوم بإضافة تجربة جديدة\r\n        await axios.post('http://localhost:8080/api/experiences', newExperience);\r\n        setSuccess(true);\r\n        setError('');\r\n      }\r\n\r\n      // بعد الإضافة أو التعديل، نعود إلى صفحة الخبرات\r\n      setTimeout(() => {\r\n        navigate('/experiences');  // استخدم navigate بدلاً من history.push\r\n      }, 1500);\r\n      \r\n    } catch (error) {\r\n      setError('حدث خطأ أثناء حفظ البيانات.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>{experienceId ? 'تعديل الخبرة العملية' : 'إضافة خبرة عملية'}</h3>\r\n      {success && <Alert variant=\"success\">{experienceId ? 'تم تعديل الخبرة بنجاح!' : 'تم إضافة الخبرة بنجاح!'}</Alert>}\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formJobTitle\">\r\n          <Form.Label>المسمى الوظيفي</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"أدخل المسمى الوظيفي\"\r\n            value={jobTitle}\r\n            onChange={(e) => setJobTitle(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formCompanyName\">\r\n          <Form.Label>اسم الشركة</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"أدخل اسم الشركة\"\r\n            value={companyName}\r\n            onChange={(e) => setCompanyName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formLocation\">\r\n          <Form.Label>الموقع</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"أدخل الموقع\"\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formStartDate\">\r\n          <Form.Label>تاريخ البدء</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formEndDate\">\r\n          <Form.Label>تاريخ الانتهاء</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formExperienceDescription\">\r\n          <Form.Label>وصف الخبرة</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"أدخل وصف الخبرة\"\r\n            value={experienceDescription}\r\n            onChange={(e) => setExperienceDescription(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formSalary\">\r\n          <Form.Label>الراتب</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"أدخل الراتب\"\r\n            value={salary}\r\n            onChange={(e) => setSalary(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          {experienceId ? 'تعديل الخبرة' : 'إضافة الخبرة'}\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditExperience;\r\n"],"names":["AddEditExperience","experienceId","useParams","navigate","useNavigate","jobTitle","setJobTitle","useState","companyName","setCompanyName","location","setLocation","startDate","setStartDate","endDate","setEndDate","experienceDescription","setExperienceDescription","salary","setSalary","error","setError","success","setSuccess","useEffect","fetchExperience","async","experience","axios","get","concat","data","console","_jsxs","children","_jsx","Alert","variant","Form","onSubmit","e","preventDefault","newExperience","put","post","setTimeout","Group","controlId","Label","Control","type","placeholder","value","onChange","target","as","rows","Button"],"sourceRoot":""}