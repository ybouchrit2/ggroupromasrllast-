{"version":3,"file":"static/js/972.63511a1a.chunk.js","mappings":"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","sources":["components/admin/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Row, Col, Card, Badge, ProgressBar, ListGroup, Button, Spinner } from 'react-bootstrap';\r\n\r\nconst UserDashboard = () => {\r\n  const [resume, setResume] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // استخراج التوكن من localStorage\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError(\"لم يتم العثور على التوكن. يُرجى تسجيل الدخول.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // فك تشفير التوكن لاستخراج userId\r\n      const decodedToken = JSON.parse(atob(token.split('.')[1])); // فك تشفير التوكن\r\n      const userId = decodedToken.userId; // تأكد من أن `userId` موجود في التوكن\r\n\r\n      if (!userId) {\r\n        setError(\"تعذر استخراج معرف المستخدم من التوكن.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // إرسال طلب GET للحصول على بيانات المستخدم باستخدام userId\r\n        const response = await axios.get(`http://localhost:8080/api/users/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` } // إضافة التوكن هنا\r\n        });\r\n        setResume(response.data);\r\n      } catch (error) {\r\n        setError(\"حدث خطأ أثناء تحميل البيانات. يرجى المحاولة لاحقًا.\");\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // عند تغيير أي شيء داخل []، سيقوم `useEffect` بالتنفيذ مجددًا\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" />\r\n        <div>جاري تحميل البيانات...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"alert alert-danger\">{error}</div>;\r\n  }\r\n\r\n  if (!resume) {\r\n    return <div>لا توجد بيانات لعرضها.</div>;\r\n  }\r\n\r\n  const { name, email, phone, role, jobApplications } = resume;\r\n\r\n  if (!jobApplications || jobApplications.length === 0) {\r\n    return <div>لا توجد طلبات وظائف لعرضها.</div>;\r\n  }\r\n\r\n  const jobApplication = jobApplications[0];\r\n  const profileImage = jobApplication.profileImagePath || '/path/to/default-image.jpg';\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Row className=\"justify-content-center\">\r\n        {/* Column for Profile */}\r\n        <Col md={4} className=\"mb-4\">\r\n          <Card className=\"text-center shadow-lg\">\r\n            <Card.Body>\r\n              <img\r\n                src={profileImage}\r\n                alt=\"Profile\"\r\n                className=\"img-fluid rounded-circle mb-3\"\r\n                width=\"150\"\r\n                aria-label=\"صورة الملف الشخصي\"\r\n              />\r\n              <h3 className=\"font-weight-bold\">{name}</h3>\r\n              <p>{email}</p>\r\n              <p>{phone}</p>\r\n              <p><Badge bg=\"primary\">{role}</Badge></p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Column for Main Content */}\r\n        <Col md={8}>\r\n          <Card className=\"shadow-lg\">\r\n            <Card.Body>\r\n              {/* Personal Information Section */}\r\n              <h4 className=\"mt-2 mb-3\" style={{ color: '#007bff' }}>معلومات شخصية</h4>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item><strong>الاسم:</strong> {name}</ListGroup.Item>\r\n                <ListGroup.Item><strong>رقم الهاتف:</strong> {phone}</ListGroup.Item>\r\n                <ListGroup.Item><strong>البريد الإلكتروني:</strong> {email}</ListGroup.Item>\r\n                <ListGroup.Item><strong>الدور:</strong> {role}</ListGroup.Item>\r\n              </ListGroup>\r\n\r\n              {/* Skills Section */}\r\n              {jobApplication.jobApplicationSkills && jobApplication.jobApplicationSkills.length > 0 ? (\r\n                <>\r\n                  <h4 className=\"mt-4 mb-3\" style={{ color: '#28a745' }}>المهارات</h4>\r\n                  {jobApplication.jobApplicationSkills.map((skill) => (\r\n                    <Card key={skill.id} className=\"mb-3 shadow-sm\">\r\n                      <Card.Body>\r\n                        <h5>{skill.skillName}</h5>\r\n                        <p>{skill.skillDescription}</p>\r\n                        <p><strong>الإتقان:</strong> {skill.proficiencyPercentage}%</p>\r\n                        <ProgressBar now={skill.proficiencyPercentage} label={`${skill.proficiencyPercentage}%`} />\r\n                      </Card.Body>\r\n                    </Card>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <div>لا توجد مهارات لعرضها.</div>\r\n              )}\r\n\r\n              {/* Experiences Section */}\r\n              {jobApplication.jobApplicationExperiences && jobApplication.jobApplicationExperiences.length > 0 ? (\r\n                <>\r\n                  <h4 className=\"mt-4 mb-3\" style={{ color: '#ffc107' }}>الخبرات العملية</h4>\r\n                  {jobApplication.jobApplicationExperiences.map((exp, index) => (\r\n                    <Card key={index} className=\"mb-3 shadow-sm\">\r\n                      <Card.Body>\r\n                        <h5>{exp.jobTitle} في {exp.companyName}</h5>\r\n                        <p><strong>الموقع:</strong> {exp.location}</p>\r\n                        <p><strong>المدة:</strong> {exp.startDate} - {exp.endDate}</p>\r\n                        <p><strong>الوصف:</strong> {exp.experienceDescription}</p>\r\n                        <p><strong>الراتب:</strong> {exp.salary} جنيه</p>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <div>لا توجد خبرات عملية لعرضها.</div>\r\n              )}\r\n\r\n              {/* Certifications Section */}\r\n              {jobApplication.jobApplicationCertifications && jobApplication.jobApplicationCertifications.length > 0 ? (\r\n                <>\r\n                  <h4 className=\"mt-4 mb-3\" style={{ color: '#17a2b8' }}>الشهادات</h4>\r\n                  {jobApplication.jobApplicationCertifications.map((cert) => (\r\n                    <Card key={cert.id} className=\"mb-3 shadow-sm\">\r\n                      <Card.Body>\r\n                        <h5>{cert.certificationName}</h5>\r\n                        <p>{cert.certificationDescription}</p>\r\n                        <p><strong>صادرة من:</strong> {cert.certificationIssuer}</p>\r\n                        <p><strong>صالحة حتى:</strong> {cert.expirationDate}</p>\r\n                        <Button variant=\"primary\" href={cert.certificationUrl} target=\"_blank\">\r\n                          عرض الشهادة\r\n                        </Button>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <div>لا توجد شهادات لعرضها.</div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"names":["UserDashboard","resume","setResume","useState","loading","setLoading","error","setError","useEffect","async","token","localStorage","getItem","userId","JSON","parse","atob","split","response","axios","get","concat","headers","Authorization","data","console","fetchData","_jsxs","className","children","_jsx","Spinner","animation","name","email","phone","role","jobApplications","length","jobApplication","profileImage","profileImagePath","Container","Row","Col","md","Card","Body","src","alt","width","Badge","bg","style","color","ListGroup","variant","Item","jobApplicationSkills","_Fragment","map","skill","skillName","skillDescription","proficiencyPercentage","ProgressBar","now","label","id","jobApplicationExperiences","exp","index","jobTitle","companyName","location","startDate","endDate","experienceDescription","salary","jobApplicationCertifications","cert","certificationName","certificationDescription","certificationIssuer","expirationDate","Button","href","certificationUrl","target"],"sourceRoot":""}