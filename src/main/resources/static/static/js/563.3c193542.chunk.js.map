{"version":3,"file":"static/js/563.3c193542.chunk.js","mappings":"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","sources":["components/JpbApplication/JobApplicationForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst JobApplicationDetails = () => {\r\n  const [resume, setResume] = useState(null);\r\n  const [certifications, setCertifications] = useState([]);\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\"); // استرجاع userId من localStorage\r\n\r\n    if (userId) {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // جلب بيانات job_applications المرتبطة بالمستخدم\r\n      axios\r\n        .get(`http://localhost:8080/api/job-application/apply/${userId}`)\r\n        .then((response) => {\r\n          // تحديد السجل المناسب بناءً على user_id\r\n          const jobApplication = response.data.find(\r\n            (application) => application.userId === userId\r\n          );\r\n\r\n          if (jobApplication) {\r\n            // تحديث الحالة بناءً على بيانات job_application\r\n            setResume(jobApplication.resume);\r\n            setCertifications(jobApplication.certifications);\r\n            setExperiences(jobApplication.experiences);\r\n            setSkills(jobApplication.skills);\r\n          } else {\r\n            setError(\"No job application found for this user.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setError(\"There was an error fetching the job application data!\");\r\n          console.error(error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setError(\"User is not logged in.\");\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Job Application Details</h2>\r\n      \r\n      {resume && (\r\n        <div>\r\n          <h3>Resume</h3>\r\n          <a href={`http://localhost:8080${resume}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Download Resume\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      {certifications.length > 0 && (\r\n        <div>\r\n          <h3>Certifications</h3>\r\n          <ul>\r\n            {certifications.map((cert, index) => (\r\n              <li key={index}>\r\n                <strong>{cert.certificationName}</strong><br />\r\n                Issuer: {cert.certificationIssuer}<br />\r\n                Valid: {cert.certificationDate} - {cert.expirationDate}<br />\r\n                <a href={cert.certificationUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Certification Link\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {experiences.length > 0 && (\r\n        <div>\r\n          <h3>Experiences</h3>\r\n          <ul>\r\n            {experiences.map((exp, index) => (\r\n              <li key={index}>\r\n                <strong>{exp.jobTitle}</strong> at {exp.companyName}<br />\r\n                {exp.startDate} - {exp.endDate}<br />\r\n                Location: {exp.location}<br />\r\n                Description: {exp.experienceDescription}<br />\r\n                Skills Acquired: {exp.skillsAcquired}<br />\r\n                Technologies Used: {exp.technologiesUsed}<br />\r\n                Salary: ${exp.salary}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {skills.length > 0 && (\r\n        <div>\r\n          <h3>Skills</h3>\r\n          <ul>\r\n            {skills.map((skill, index) => (\r\n              <li key={index}>\r\n                <strong>{skill.skillName}</strong><br />\r\n                Level: {skill.skillLevel}<br />\r\n                Proficiency: {skill.proficiencyPercentage}%<br />\r\n                Experience: {skill.experienceYears} years<br />\r\n                Certified: {skill.certified ? \"Yes\" : \"No\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobApplicationDetails;\r\n"],"names":["JobApplicationDetails","resume","setResume","useState","certifications","setCertifications","experiences","setExperiences","skills","setSkills","loading","setLoading","error","setError","useEffect","userId","localStorage","getItem","axios","get","concat","then","response","jobApplication","data","find","application","catch","console","finally","_jsx","children","_jsxs","href","target","rel","length","map","cert","index","certificationName","certificationIssuer","certificationDate","expirationDate","certificationUrl","exp","jobTitle","companyName","startDate","endDate","location","experienceDescription","skillsAcquired","technologiesUsed","salary","skill","skillName","skillLevel","proficiencyPercentage","experienceYears","certified"],"sourceRoot":""}