{"version":3,"file":"static/js/46.6be1de43.chunk.js","mappings":"4LAMA,MA6HA,EA7HqBA,IAAqB,IAApB,WAAEC,GAAYD,EAClC,MAAME,GAAWC,EAAAA,EAAAA,MAOXC,GAJcC,EAAAA,EAAAA,UAClB,IAAM,IAAIC,gBAAgBJ,EAASK,SACnC,CAACL,EAASK,SAEoBC,IAAI,QAG9BC,EAAOR,GAAcG,GAEpBM,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC7B,EAAEG,IAAMC,EAAAA,EAAAA,MACRC,EAAeC,aAAaC,QAAQ,aAAe,MAGzDC,EAAAA,EAAAA,YAAU,KACWC,WACjB,GAAIZ,EACF,IACE,MAAMa,QAAiBC,MAAM,4CAADC,OACkBP,EAAY,UAAAO,OAASf,IAGnE,IAAKa,EAASG,GACZ,MAAM,IAAIC,MAAM,yBAGlB,MAAMC,QAAaL,EAASM,OAC5BjB,EAASgB,EACX,CAAE,MAAOd,GACPC,EAASD,EAAMgB,SACfC,QAAQjB,MAAM,wBAAyBA,EACzC,CACF,EAGFkB,EAAY,GACX,CAACd,EAAcR,IAgBlB,OACEuB,EAAAA,EAAAA,KAAA,WAASC,UAAU,gBAAgB,kBAAgB,wBAAuBC,UACxEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,MAAII,GAAG,wBAAwBH,UAAU,mBAAkBC,SAjBlDG,MACf,OAAQ5B,GACN,IAAK,UACH,OAAOM,EAAE,2BACX,IAAK,MACH,OAAOA,EAAE,uBACX,IAAK,UACH,OAAOA,EAAE,2BACX,QACE,OAAOA,EAAE,uBACb,EAQSsB,KAEFxB,GACCmB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAEnB,EAAE,uBAAyBF,IACrDH,EAAM4B,OAAS,EACjB5B,EAAM6B,KAAKC,IACTR,EAAAA,EAAAA,KAAA,OAAmBC,UAAU,gBAAeC,UAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OACES,IAAG,2CAAAjB,OAA6CgB,EAAKE,WAAa,qBAClEC,IAAKH,EAAKI,OAAS,aACnBX,UAAU,eACVY,MAAO,CAAEC,OAAQ,QAASC,UAAW,SACrCC,QAAQ,UAEVb,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MACEC,UAAU,aACVY,MAAO,CACLC,OAAQ,OACRG,SAAU,SACVC,aAAc,YACdhB,SAEDM,EAAKI,SAERT,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACmB,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MAAkB,IACxC,IAAIC,KAAKd,EAAKe,WAAWC,mBACxBvC,OAGJkB,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACmB,EAAAA,EAAe,CAACC,KAAMK,EAAAA,MAAW,IACjCjB,EAAKkB,QAAU,wBAGpB1B,EAAAA,EAAAA,KAAA,KACEC,UAAU,mBACVY,MAAO,CAAEc,UAAW,QAASzB,SAE5BM,EAAKoB,aAAe7C,EAAE,0BAEzBiB,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CACHC,GAAE,iBAAAtC,OAAmBgB,EAAKJ,IAC1BH,UAAU,0BAAyBC,SAElCnB,EAAE,2BA1CDyB,EAAKJ,OAiDjBJ,EAAAA,EAAAA,KAAA,KAAAE,SAAInB,EAAE,yBAIJ,C","sources":["components/blogs/Blogs.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst BlogsAndForm = ({ manualType }) => {\n  const location = useLocation();\n\n  // استخدام URLSearchParams للحصول على معلمة \"type\" من الـ URL\n  const queryParams = useMemo(\n    () => new URLSearchParams(location.search),\n    [location.search],\n  );\n  const typeFromUrl = queryParams.get(\"type\"); // الحصول على قيمة type من URL\n\n  // تحديد النوع بناءً على القيم المتاحة (manualType أو typeFromUrl)\n  const type = manualType || typeFromUrl;\n\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const { t } = useTranslation();\n  const languageCode = localStorage.getItem(\"language\") || \"en\";\n\n  // استخدام useEffect لمراقبة التغيير في معلمة type\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      if (type) {\n        try {\n          const response = await fetch(\n            `http://localhost:8080/api/blogs?language=${languageCode}&type=${type}`,\n          );\n\n          if (!response.ok) {\n            throw new Error(\"Failed to fetch blogs\");\n          }\n\n          const data = await response.json();\n          setBlogs(data);\n        } catch (error) {\n          setError(error.message);\n          console.error(\"Error fetching blogs:\", error);\n        }\n      }\n    };\n\n    fetchBlogs();\n  }, [languageCode, type]); // تحديث عندما يتغير type\n\n  // تحديد العنوان بناءً على الـ type\n  const getTitle = () => {\n    switch (type) {\n      case \"project\":\n        return t(\"blogs.projectBlogsTitle\"); // \"Project Blogs\" أو ما يناسبك من العناوين\n      case \"new\":\n        return t(\"blogs.newBlogsTitle\"); // \"New Blogs\" أو ما يناسبك من العناوين\n      case \"general\":\n        return t(\"blogs.generalBlogsTitle\"); // \"General Blogs\" أو ما يناسبك من العناوين\n      default:\n        return t(\"blogs.allBlogsTitle\"); // \"All Blogs\" في حالة عدم وجود نوع\n    }\n  };\n\n  return (\n    <section className=\"blogs-section\" aria-labelledby=\"blogs-section-heading\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <h2 id=\"blogs-section-heading\" className=\"text-center my-4\">\n            {getTitle()}\n          </h2>\n          {error ? (\n            <p className=\"text-danger\">{t(\"blogs.errorMessage\") || error}</p>\n          ) : blogs.length > 0 ? (\n            blogs.map((blog) => (\n              <div key={blog.id} className=\"col-md-4 mb-4\">\n                <div className=\"card shadow-sm h-100\">\n                  <img\n                    src={`http://localhost:8080/assets/imageBlogs/${blog.imagePath || \"default-image.jpg\"}`}\n                    alt={blog.title || \"Blog image\"}\n                    className=\"card-img-top\"\n                    style={{ height: \"200px\", objectFit: \"cover\" }}\n                    loading=\"lazy\"\n                  />\n                  <div className=\"card-body d-flex flex-column\">\n                    <h5\n                      className=\"card-title\"\n                      style={{\n                        height: \"30px\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                      }}\n                    >\n                      {blog.title}\n                    </h5>\n                    <div className=\"d-flex justify-content-between mb-2 text-muted\">\n                      <span>\n                        <FontAwesomeIcon icon={faCalendarAlt} />{\" \"}\n                        {new Date(blog.createdAt).toLocaleDateString(\n                          languageCode,\n                        )}\n                      </span>\n                      <span>\n                        <FontAwesomeIcon icon={faUser} />{\" \"}\n                        {blog.author || \"Unknown Author\"}\n                      </span>\n                    </div>\n                    <p\n                      className=\"blog-description\"\n                      style={{ marginTop: \"10px\" }}\n                    >\n                      {blog.description || t(\"blogs.noDescription\")}\n                    </p>\n                    <Link\n                      to={`/BlogContants/${blog.id}`}\n                      className=\"btn btn-primary mt-auto\"\n                    >\n                      {t(\"blogs.readMore\")}\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>{t(\"blogs.noBlogs\")}</p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BlogsAndForm;\n"],"names":["_ref","manualType","location","useLocation","typeFromUrl","useMemo","URLSearchParams","search","get","type","blogs","setBlogs","useState","error","setError","t","useTranslation","languageCode","localStorage","getItem","useEffect","async","response","fetch","concat","ok","Error","data","json","message","console","fetchBlogs","_jsx","className","children","_jsxs","id","getTitle","length","map","blog","src","imagePath","alt","title","style","height","objectFit","loading","overflow","textOverflow","FontAwesomeIcon","icon","faCalendarAlt","Date","createdAt","toLocaleDateString","faUser","author","marginTop","description","Link","to"],"sourceRoot":""}