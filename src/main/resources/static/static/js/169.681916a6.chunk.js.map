{"version":3,"file":"static/js/169.681916a6.chunk.js","mappings":"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","sources":["components/admin/SignUp.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"; // استيراد useNavigate بدلاً من useHistory\r\n\r\nconst SignUp = () => {\r\n    const [name, setName] = useState(\"\"); // تغيير username إلى name\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\"); // إضافة حقل الهاتف\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const navigate = useNavigate(); // استخدام useNavigate\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage(\"\"); // Reset the error message before submitting\r\n    \r\n        const newUser = {\r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n            phone: phone,\r\n            role: \"user\", \r\n        };\r\n    \r\n        try {\r\n            const response = await axios.post(\"http://localhost:8080/api/users/signup\", newUser, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"  // تأكد من إرسال النوع الصحيح\r\n                }\r\n            });\r\n            navigate(\"/signin\"); \r\n        } catch (error) {\r\n            if (error.response) {\r\n                setErrorMessage(error.response.data || \"Error occurred during sign up\");\r\n            } else {\r\n                setErrorMessage(\"Error occurred during sign up\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center mt-5\">\r\n                <Col xs={12} md={6}>\r\n                    <h3>Sign Up</h3>\r\n                    {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"phone\">\r\n                            <Form.Label>Phone</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter phone number\"\r\n                                value={phone}\r\n                                onChange={(e) => setPhone(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["SignUp","name","setName","useState","email","setEmail","password","setPassword","phone","setPhone","errorMessage","setErrorMessage","navigate","useNavigate","_jsx","Container","children","Row","className","_jsxs","Col","xs","md","Form","onSubmit","async","e","preventDefault","newUser","role","axios","post","headers","error","response","data","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","Button","variant","_excluded","React","_ref","ref","bsPrefix","fluid","as","Component","props","_objectWithoutProperties","prefix","useBootstrapPrefix","suffix","concat","_objectSpread","classNames","displayName","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push"],"sourceRoot":""}