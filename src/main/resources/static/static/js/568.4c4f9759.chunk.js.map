{"version":3,"file":"static/js/568.4c4f9759.chunk.js","mappings":"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","sources":["components/admin/ManageContact.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faExclamationTriangle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport './admin.css'; \r\n\r\n// Bottone come link stilizzato\r\nconst ButtonLink = styled(Link)`\r\n  margin: 5px;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  font-weight: 600; \r\n  display: inline-block;\r\n  text-decoration: none;\r\n  border: none;\r\n  background-color: ${(props) => props.bgColor || \"#007bff\"};\r\n  color: white;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.hoverColor || \"#0056b3\"};\r\n    transform: scale(1.05);\r\n    color: ${(props) => props.hoverTextColor || \"#ffffff\"};\r\n    font-weight: bold;\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.98);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst Container = styled.section`\r\n  margin-top: 20px;\r\n  padding: 30px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: separate;\r\n  border-spacing: 5px;\r\n  margin-top: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: left;\r\n`;\r\n\r\nconst TableHead = styled.th`\r\n  background-color: #844bca;\r\n  color: white;\r\n  text-align: left;\r\n  padding: 16px 20px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  border-radius: 8px 8px 0 0;\r\n`;\r\n\r\nconst TableCell = styled.td`\r\n  padding: 14px 20px;\r\n  border-bottom: 1px solid #ddd;\r\n  color: #333;\r\n  font-size: 14px;\r\n  text-align: left;\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoadingMessage = styled.div`\r\n  font-size: 18px;\r\n  color: #007bff;\r\n  text-align: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  display: block;\r\n  margin: 10px auto;\r\n`;\r\n\r\nconst ManageContacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/api/contacts`);\r\n        if (!response.ok) {\r\n          throw new Error(\"Impossibile caricare i messaggi\");\r\n        }\r\n        const data = await response.json();\r\n        setContacts(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        console.error(\"Errore nel caricamento dei messaggi:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/api/contacts/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Impossibile eliminare il messaggio\");\r\n      }\r\n      setContacts(contacts.filter((contact) => contact.id !== id));\r\n    } catch (error) {\r\n      console.error(\"Errore nell'eliminazione del messaggio:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredContacts = contacts.filter((contact) => {\r\n    const searchLowerCase = searchQuery.toLowerCase();\r\n    return (\r\n      contact.name.toLowerCase().includes(searchLowerCase) ||\r\n      contact.email.toLowerCase().includes(searchLowerCase) ||\r\n      contact.description.toLowerCase().includes(searchLowerCase) ||\r\n      new Date(contact.createdAt).toLocaleDateString().includes(searchLowerCase)\r\n    );\r\n  });\r\n\r\n  if (loading) {\r\n    return <LoadingMessage>Caricamento messaggi...</LoadingMessage>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"text-center my-4\">Gestione Contatti</h2>\r\n      {error && (\r\n        <ErrorMessage>\r\n          <FontAwesomeIcon icon={faExclamationTriangle} />\r\n          {error}\r\n        </ErrorMessage>\r\n      )}\r\n      <SearchInput\r\n        type=\"text\"\r\n        placeholder=\"Cerca contatti...\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      <div className=\"table-responsive\">\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <TableHead>ID</TableHead>\r\n              <TableHead>Nome</TableHead>\r\n              <TableHead>Email</TableHead>\r\n              <TableHead>Descrizione</TableHead>\r\n              <TableHead>Data di Creazione</TableHead>\r\n              <TableHead>Azioni</TableHead>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredContacts.map((contact) => (\r\n              <tr key={contact.id}>\r\n                <TableCell>{contact.id}</TableCell>\r\n                <TableCell>{contact.name}</TableCell>\r\n                <TableCell>{contact.email}</TableCell>\r\n                <TableCell>{contact.description}</TableCell>\r\n                <TableCell>{new Date(contact.createdAt).toLocaleDateString()}</TableCell>\r\n                <TableCell>\r\n                  <ButtonLink\r\n                    onClick={() => deleteContact(contact.id)}\r\n                    bgColor=\"#dc3545\"\r\n                    hoverColor=\"#c82333\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash} size=\"lg\" />\r\n                    Elimina\r\n                  </ButtonLink>\r\n                </TableCell>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageContacts;\r\n"],"names":["ButtonLink","styled","Link","_templateObject","_taggedTemplateLiteral","props","bgColor","hoverColor","hoverTextColor","Container","section","_templateObject2","Table","table","_templateObject3","TableHead","th","_templateObject4","TableCell","td","_templateObject5","ErrorMessage","p","_templateObject6","LoadingMessage","div","_templateObject7","SearchInput","input","_templateObject8","ManageContacts","contacts","setContacts","useState","error","setError","loading","setLoading","searchQuery","setSearchQuery","useEffect","async","response","fetch","ok","Error","data","json","message","console","fetchContacts","filteredContacts","filter","contact","searchLowerCase","toLowerCase","name","includes","email","description","Date","createdAt","toLocaleDateString","_jsx","children","_jsxs","className","FontAwesomeIcon","icon","faExclamationTriangle","type","placeholder","value","onChange","e","target","map","id","onClick","concat","method","deleteContact","faTrash","size"],"sourceRoot":""}