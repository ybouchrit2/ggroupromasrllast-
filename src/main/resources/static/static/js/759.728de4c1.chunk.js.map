{"version":3,"file":"static/js/759.728de4c1.chunk.js","mappings":"yKAGA,MAsEA,EAtEsBA,KACpB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAkBvC,IAfAG,EAAAA,EAAAA,YAAU,KACWC,WACjB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,cACjCR,EAASM,EAASG,MAClBN,GAAW,EACb,CAAE,MAAOO,GACPC,QAAQD,MAAM,wBAAyBA,GACvCP,GAAW,EACb,GAGFS,EAAY,GACX,IAECV,EACF,OAAOW,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAiBd,OACEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qBACJC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,UACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kBAGRD,EAAAA,EAAAA,KAAA,SAAAC,SACGf,EAAMiB,KAAIC,IACTF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAKC,YACVL,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAKE,SACVN,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAKG,QACVP,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,UAAQQ,QAASA,KAAMC,OAlCXC,EAkC4BN,EAAKO,GAlCzBC,EAkC2C,UAAdR,EAAKG,KAAmB,OAAS,aAhC9Fb,EAAAA,EAAMmB,IAAI,cAADC,OAAeJ,GAAU,CAAEH,KAAMK,IACvCG,MAAKtB,IACJN,EAASD,EAAMiB,KAAIC,GACjBA,EAAKO,KAAOD,GAAMM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQZ,GAAI,IAAEG,KAAMK,IAAYR,KAEpDa,MAAM,4BAA4B,IAEnCC,OAAMrB,IACLC,QAAQD,MAAM,uBAAwBA,EAAM,IAVzBY,IAACC,EAAQE,CAkCuE,EAAAX,SAAC,oBALvFG,EAAKO,aAahB,C","sources":["components/admin/AdminSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdminSettings = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // جلب البيانات من الخادم\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('/api/users');\r\n        setUsers(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const handleRoleChange = (userId, newRole) => {\r\n    // تحديث الدور للمستخدم في واجهة الـ API\r\n    axios.put(`/api/users/${userId}`, { role: newRole })\r\n      .then(response => {\r\n        setUsers(users.map(user =>\r\n          user.id === userId ? { ...user, role: newRole } : user\r\n        ));\r\n        alert('Role updated successfully');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error updating role:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Settings</h1>\r\n      <h2>User Management</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.username}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <button onClick={() => handleRoleChange(user.id, user.role === 'ADMIN' ? 'USER' : 'ADMIN')}>\r\n                  Change Role\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSettings;\r\n"],"names":["AdminSettings","users","setUsers","useState","loading","setLoading","useEffect","async","response","axios","get","data","error","console","fetchUsers","_jsx","children","_jsxs","map","user","username","email","role","onClick","handleRoleChange","userId","id","newRole","put","concat","then","_objectSpread","alert","catch"],"sourceRoot":""}