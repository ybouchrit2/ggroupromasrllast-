{"version":3,"file":"static/js/15.94de5d76.chunk.js","mappings":"wKAIA,MA0HA,EA1HeA,KACb,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GACjCO,GAAWC,EAAAA,EAAAA,MAqEjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2EAENC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBR,IAASM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAER,KAC/CS,EAAAA,EAAAA,MAAA,QAAMC,SA7EGC,UACnBC,EAAEC,iBACFV,GAAW,GACXF,EAAS,IAET,IAEE,MAAMa,QAAiBC,EAAAA,EAAMC,KAAK,oBAAqB,CAAErB,QAAOG,aAGhE,GAAIgB,EAASG,MAAQH,EAASG,KAAKC,MAAO,CACxC,MAAMA,EAAQJ,EAASG,KAAKC,MAG5BC,aAAaC,QAAQ,QAASF,GAG9B,MACMG,EADeC,KAAKC,MAAMC,KAAKN,EAAMO,MAAM,KAAK,KAC1BJ,OAE5B,IAAKA,EAGH,OAFApB,EAAS,yMACTE,GAAW,GAKb,MAIMuB,SAJqBX,EAAAA,EAAMY,IAAI,cAADC,OAAeP,GAAU,CAC3DQ,QAAS,CAAEC,cAAc,UAADF,OAAYV,OAGRD,KAAKc,KAGlB,eAAbL,EACFtB,EAAS,mBACa,cAAbsB,EACTtB,EAAS,kBAETH,EAAS,yHAEb,MACEA,EAAS,2KAEb,CAAE,MAAO+B,GAEHA,EAAIlB,SAEsB,MAAxBkB,EAAIlB,SAASmB,OACfhC,EAAS,sGACwB,MAAxB+B,EAAIlB,SAASmB,OACtBhC,EAAS,mHAETA,EAAS,yEAAD2B,OAAmBI,EAAIlB,SAASmB,OAAM,sHAEvCD,EAAIE,QAEbjC,EAAS,6NAGTA,EAAS,8LAEb,CAAC,QACCE,GAAW,EACb,GAauCK,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAO6B,QAAQ,QAAO3B,SAAC,uGACvBF,EAAAA,EAAAA,KAAA,SACE8B,KAAK,QACL7B,UAAU,eACV8B,GAAG,QACHC,MAAO3C,EACP4C,SAAW3B,GAAMhB,EAASgB,EAAE4B,OAAOF,OACnCG,UAAQ,QAGZhC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAO6B,QAAQ,WAAU3B,SAAC,mEAC1BF,EAAAA,EAAAA,KAAA,SACE8B,KAAK,WACL7B,UAAU,eACV8B,GAAG,WACHC,MAAOxC,EACPyC,SAAW3B,GAAMb,EAAYa,EAAE4B,OAAOF,OACtCG,UAAQ,QAGZnC,EAAAA,EAAAA,KAAA,UAAQ8B,KAAK,SAAS7B,UAAU,wBAAwBmC,SAAUxC,EAAQM,SACvEN,EAAU,kGAAyB,+EAI1CI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,yEAAcF,EAAAA,EAAAA,KAAA,KAAGqC,KAAK,UAASnC,SAAC,yEAKvC,C","sources":["components/admin/SignIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // استخدام useNavigate لتوجيه المستخدم بعد تسجيل الدخول\r\n\r\nconst Signin = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate(); // استخدام useNavigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n  \r\n    try {\r\n      // إرسال بيانات تسجيل الدخول إلى الـ API في Spring Boot\r\n      const response = await axios.post('/api/users/signin', { email, password });\r\n  \r\n      // التحقق من وجود التوكن في الرد\r\n      if (response.data && response.data.token) {\r\n        const token = response.data.token;\r\n  \r\n        // تخزين التوكن في localStorage\r\n        localStorage.setItem('token', token);\r\n  \r\n        // فك تشفير التوكن لاستخراج البيانات (مثل userId)\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1])); // فك تشفير التوكن\r\n        const userId = decodedToken.userId; // تأكد من أن `userId` موجود في التوكن\r\n  \r\n        if (!userId) {\r\n          setError('تعذر استخراج معرف المستخدم من التوكن.');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n  \r\n        // استرجاع بيانات المستخدم بعد التحقق من التوكن\r\n        const userResponse = await axios.get(`/api/users/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n  \r\n        const userRole = userResponse.data.role;\r\n  \r\n        // التوجيه بناءً على الدور\r\n        if (userRole === 'ROLE_ADMIN') {\r\n          navigate('/dashboardadmin'); // توجيه إلى لوحة تحكم الأدمن\r\n        } else if (userRole === 'ROLE_USER') {\r\n          navigate('/UserDashboard'); // توجيه إلى لوحة تحكم المستخدم\r\n        } else {\r\n          setError('دور المستخدم غير معروف.');\r\n        }\r\n      } else {\r\n        setError('تعذر الحصول على التوكن من الخادم.');\r\n      }\r\n    } catch (err) {\r\n      // معالجة الأخطاء إذا كانت هناك مشكلة في الاتصال أو البيانات غير صحيحة\r\n      if (err.response) {\r\n        // إذا كانت هناك استجابة من الخادم\r\n        if (err.response.status === 404) {\r\n          setError('المستخدم غير موجود');\r\n        } else if (err.response.status === 401) {\r\n          setError('كلمة المرور غير صحيحة');\r\n        } else {\r\n          setError(`خطأ في الخادم: ${err.response.status}. يرجى المحاولة لاحقاً.`);\r\n        }\r\n      } else if (err.request) {\r\n        // إذا كانت المشكلة في الشبكة ولم يتم الحصول على رد من الخادم\r\n        setError('فشل الاتصال بالخادم. يرجى المحاولة لاحقاً.');\r\n      } else {\r\n        // في حال كان هناك خطأ آخر غير متعلق بالشبكة أو الاستجابة\r\n        setError('حدث خطأ غير متوقع أثناء تسجيل الدخول.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3>تسجيل الدخول</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {error && <div className=\"alert alert-danger\">{error}</div>}\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">البريد الإلكتروني</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">كلمة المرور</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>\r\n                  {loading ? 'جاري تسجيل الدخول...' : 'تسجيل الدخول'}\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-footer text-center\">\r\n              <p>لا تملك حساب؟ <a href=\"/signup\">تسجيل جديد</a></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"names":["Signin","email","setEmail","useState","password","setPassword","error","setError","loading","setLoading","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","response","axios","post","data","token","localStorage","setItem","userId","JSON","parse","atob","split","userRole","get","concat","headers","Authorization","role","err","status","request","htmlFor","type","id","value","onChange","target","required","disabled","href"],"sourceRoot":""}